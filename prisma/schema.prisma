// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Beast {
  id                  Int       @id @default(autoincrement())
  gamerTag            String    @unique @db.VarChar(20)
  email               String    @unique
  beastieBros         Beast[]   @relation("BeastieBros")
  beastieBrosRelation Beast[]   @relation("BeastieBros")
  authoredPreesh      Preesh[]  @relation("authorId")
  receivedPreesh      Preesh[]  @relation("receiverId")
  prees               Preesh[]  @relation("prees")
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  comments            Comment[]
}

model Preesh {
  id         Int             @id @default(autoincrement())
  text       String
  author     Beast           @relation(fields: [authorId], references: [id], name: "authorId")
  authorId   Int
  receiver   Beast           @relation(fields: [receiverId], references: [id], name: "receiverId")
  receiverId Int
  prees      Beast[]         @relation("prees")
  praysh     Boolean         @default(false)
  heaviness  preeshHeaviness
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  comments   Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  preesh    Preesh   @relation(fields: [preeshId], references: [id])
  preeshId  Int
  author    Beast    @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum preeshHeaviness {
  LOWKEY
  HEAVY
  HEAVYFR
  SUPERPREESH
}
